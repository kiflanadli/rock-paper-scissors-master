.pick-btn,
.pick-load {
  border-radius: 50%;
  position: relative;
  background-clip: padding-box;
  border-style: solid;
  border-color: transparent;

  &::after {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: -1;
    border-radius: inherit;
  }

  $hands: (
    scissors: $scissors-gradient,
    paper: $paper-gradient,
    rock: $rock-gradient,
    lizard: $lizard-gradient,
    spock: $cyan-gradient,
  );

  @each $key, $hand in $hands {
    &.#{$key}::after {
      background: linear-gradient($hand);
    }
  }

  img {
    width: 50%;
  }

  span {
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0.05;
    border-radius: inherit;
    background-color: $bg-light;
    @include box(100%);
    scale: 0;
    transition: scale 0.5s;
    &:is(.win span) {
      @for $i from 1 through 3 {
        &:nth-of-type(#{$i}) {
          z-index: -2 * $i;
          scale: 1.3 + ($i / 2);
        }
      }
    }
  }

  &:is(.pentagon &) {
    @include box(9em);
    $border-pick-pre_start: 1em;
    border-width: $border-pick-pre_start;
    &::after {
      margin: -$border-pick-pre_start;
    }
    @media screen and (max-width: $sc-mobile) {
      @include box(8.5em);
    }
  }

  &:is(.deck-layout &) {
    @include box(17em);
    $border-pick-post_start: 2em;
    border-width: $border-pick-post_start;
    &::after {
      margin: -$border-pick-post_start;
    }
    @media screen and (max-width: $sc-mobile) {
      @include box(100%);
      max-width: 25ch;
      $border-pick-post_start: 1.2em;
      border-width: $border-pick-post_start;
      &::after {
        margin: -$border-pick-post_start;
      }
    }
  }
}

.pick-btn-pointer .pick-btn {
  cursor: pointer;

  &::before {
    cursor: pointer;
  }
}

.pick-load {
  @include mx(auto);
  background-color: $bg-dark;
  opacity: 0.7;
}

.element {
  border-radius: $radius / 2;
  padding: $space-s $space-xl;
  font-weight: unset;
  letter-spacing: 0.3ch;
  @media screen and (max-width: $sc-mobile) {
    &:not(.score-container) {
      padding: ($space-s * 1.3) ($space-xl * 1.3);
    }
  }
}

.score-container,
.replay-btn {
  background-color: $bg-light;
  border: unset;
}

.replay-btn,
.rules-btn {
  cursor: pointer;
}

.score-container {
  color: $text-score;
}

.replay-btn {
  color: $text-dark;
}

.rules-btn {
  border: 1px solid $bg-light;
  background-color: unset;
  color: $text-light;
}

.score-text {
  font-size: 4.5em;
  margin: 0;
  color: $text-dark;
}

.rules-modal {
  .close-modal {
    background-color: unset;
    border: unset;
    cursor: pointer;
    padding: 0;
    margin: 0;
    display: block;
  }
  .rules-title {
    text-align: left;
    margin: 0;
  }
}
